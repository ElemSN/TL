类与类之间关系：依赖、关联、组合、聚合、继承、实现等关系，其中的耦合度依次增加。

1.依赖?



?
依赖关系的定义为：对于两个相对独立的对象，当一个对象依赖另一个对象的服务时，
这两个对象之间主要体现为依赖关系。
一般是A中的某个方法把B的对象作为参数使用

或者在A中的某个方法中作为局部变量使用。


public class B{

}

class A
{
 ?
 ?void fun(B b);

};

2.关联?
对于两个相对独立的对象，当一个对象与另一个对象有种某种对应关系，这两个对象之间为关联关系，比如老师和学生。


关联分为单向关联，双向关联和自身关联，实现方法一般是A中包含B的某个指针或者引用。


public class B{
?

}

class A
{

 ? ?B b;

}

3.聚合?
聚合是关联关系的一种，耦合度比关联关系强，他们的代码表现是相同的，仅仅是在语义上有所区别：关联关系的对象间是平等关系，
而聚合关系的对象之间存在着包容关系，他们之间是“整体-个体”的相互关系。
比如：?
张三和李四，是关联；而张三和张三的杯子是聚合。



public class B{

}
class A
{
 ? 
?B b;

}

4.组合?



?
组合是耦合度比聚合还强的一直关系，类和类之间的关系是“整体-部分”的关系，整体和部分具有相同的生命周期，
部分不能脱离整体而独立存在，比如：人和身体，身体是人的一部分，不能独立存在。代码实现为A中包含B的成员变量

public class B{

}
class c{

}
class A
{
 ? ?
	B b;

 ? ?C c;

}

5.继承?

继承是类和类之间存在父子关系，子类继承父类的属性和方法.


注意：

java只有单继承；?


6.实现?
?
表示一个类实现一个或多个接口的方法。接口定义好操作的集合，由实现类去完成接口的具体操作



类与接口之间关系： 实现关系。

类与接口要注意的事项:

1. 非抽象类实现一个接口时，必须要把接口中所有方法全部实现。

2. 抽象类实现一个接口时，可以实现也可以不实现接口中的 方法。?

3. 一个类可以实现多个接口 。


接口与接口之间关系： 继承关系。

接口与接口之间要注意事项： 1. 一个接口是可以继承多个接口的。

