static的特点
1.static修饰的成员变量，方法可以直接被类名调用
2.static是修饰符，用于修饰方法和成员变量
3.static修饰的成员，被类的所有对象所共用
4.static先于类对象存在，在类加载时static就已经存在了
5.static的数据为共享数据，储存在方法区。
一、static变量
按照是否为静态可分为静态变量和成员变量
两者区别：
1.生命周期的不同：
        静态变量随着类的加载而存在随着类的消失而消失。
　　 成员变量随着对象的创建而存在随着对象的回收而释放。
　　
2.调用方式不同：
        静态变量可以被对象调用，也可以用类名调用。（推荐用类名调用）
　　 成员变量只能被对象调用。
　　
3.别名不同：
        静态变量称为类变量。
　　 成员变量也称为实例变量。
　　 
4.数据存储位置不同：
        静态变量数据存储在方法区（共享数据区）的静态区，所以也叫对象的共享数据。
　　 成员变量数据存储在堆内存的对象中，所以也叫对象的特有数据。
　　
一般在需要实现以下两个功能时使用静态变量：
1、在对象之间共享值时
2、方便访问变量时

二、静态方法
1.静态方法只能访问静态成员。（非静态既可以访问静态，又可以访问非静态）
2.静态方法中不可以使用this或者super关键字。
3.为static方法独立于任何实例，因此static方法必须被实现，而不能是抽象的abstract。
4.主函数是静态的。
静态方法的使用：
如果这个方法是作为一个工具来使用，就声明为static，不用new一个对象出来就可以使用了，如Math，Arrays等工具类中的方法都是用static声明的。
主函数特殊之处：
1.格式固定。 public static void main(String[] args){}
2.被jvm所识别和调用。
public:因为权限必须是最大的。
static:jvm在调用时是不需要对象的，直接用主函数所属的类名调用即可。
void:主函数没有具体的返回值 。
main:函数名，不是关键字，只是一个jvm识别的固定名字。
String[] args:这是主函数的参数列表，是一个数组类型的参数，而且元素都是字符串类型。

三、static代码块
static代码块也叫静态代码块，是在类中独立于类成员的static语句块，可以有多个，位置可以随便放，它不在任何的方法体内，JVM加载类时会执行这些静态的代码块，

如果static代码块有多个，JVM将按照它们在类中出现的先后顺序依次执行它们，每个代码块只会被执行一次。

静态代码块、构造代码块、构造函数、局部代码块区别
构造代码块：
　　在类中定义可以给所有对象进行初始化，创建几个对象调用几次。
局部代码块：
　　在方法中定义属性的生命周期，只调用一次。
静态代码块：
　　在类中定义用于给类调用时属性的初始化
构造函数与构造代码块的区别：
　　构造函数是给对应的对象进行针对性的初始化。
　　构造代码块是给所有对象进行初始化
执行顺序为：
 1、静态代码块 :给类的属性进行初始化。
 2、构造代码块:给所有的对象进行初始化。 
 3、有参或无参构造


