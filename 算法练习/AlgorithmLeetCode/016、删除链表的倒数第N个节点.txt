给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5.
说明：

给定的 n 保证是有效的。

进阶：

你能尝试使用一趟扫描实现吗？
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode h1=new ListNode(0);
        ListNode h2=null;
        h1.next=head;
        for(ListNode h3=h1;h3.next!=null;h3=h3.next){
            n--;
            if(n==0){
                h2=h1;
            }
            else if(n<0){
                h2=h2.next;
            }
        }
        h2.next=h2.next.next;
        return h1.next;
    }
}