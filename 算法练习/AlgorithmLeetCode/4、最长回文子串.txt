Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: "cbbd"
Output: "bb"
给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为1000。

示例 1：

输入: "babad"
输出: "bab"
注意: "aba"也是一个有效答案。
示例 2：

输入: "cbbd"
输出: "bb"
class Solution {
    public String longestPalindrome(String s) {
        if(s==null||s.length()<2){
            return s;
        }
        String maxs=null;
        int max=0;
        boolean bool[][]=new boolean[s.length()][s.length()];
        for(int i=0;i<s.length();++i){
            bool[i][i]=true;
            maxs=s.substring(i,i+1);
            max=1;
        }
        for(int i=0;i<bool.length-1;++i){
            if(s.charAt(i)==s.charAt(i+1)){
                bool[i][i+1]=true;
                maxs=s.substring(i,i+2);
                max=2;
            }
        }
        for(int len=3;len<bool.length+1;++len){
            for(int i=0,j=(i+len-1);j<bool.length;++i,++j){
                if(s.charAt(i)==s.charAt(j)){
                    bool[i][j]=bool[i+1][j-1];
                    if(bool[i][j]&&max<len){
                        maxs=s.substring(i,j+1);
                        max=len;
                    }
                }
                else{
                        bool[i][j]=false;
                    }
            }
        }
        return maxs;   
    }
}  