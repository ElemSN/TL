Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。

你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int [] a=new int[nums.length];
        for(int i=0;i<nums.length;i++){
           a[i]=nums[i];
        }
        Arrays.sort(a);
        int i=0,j=a.length-1;
       while(i<j){
           if(a[i]+a[j]==target){
               break;
           }
           else if(a[i]+a[j]>target){
               j--;
           }
           else{
               i++;
           }
       }
        int x,y;
        for(x=0;x<nums.length&&nums[x]!=a[i];x++);
        for(y=0;y<nums.length&&(nums[y]!=a[j]||x==y);y++);
        return new int[]{x,y};
    }
    
}