给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。
九键拼音



示例:

输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
说明:
尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。
class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> res=new ArrayList<String>();
        if(digits==null||digits.length()<1){
            return res;
        }
        res.add("");
        String[] s={"0","1","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        for(int i=0;i<digits.length();++i){
            char help=digits.charAt(i);
            int j=help-'0';
            System.out.print(j);
            res=find(res,s[j]);
        }
        return res;
    }
    public List<String> find(List<String> r,String digit){
        List<String> res=new ArrayList<String>();
        for(int i=0;i<digit.length();++i){
            for(String x:r){
                res.add(x+digit.charAt(i));
            }
        }
        return res;
        
    }
}