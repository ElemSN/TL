给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。

你的算法时间复杂度必须是 O(log n) 级别。

如果数组中不存在目标值，返回 [-1, -1]。

示例 1:

输入: nums = [5,7,7,8,8,10], target = 8
输出: [3,4]
示例 2:

输入: nums = [5,7,7,8,8,10], target = 6
输出: [-1,-1]
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int res=find(nums,target);
        if(res==nums.length||nums[res]!=target){
            return new int[]{-1,-1};
        }
        return new int[]{res,find(nums,target+1)-1};
    }
    public int find(int [] nums,int target){
        int left=0,right=nums.length;
        while(right>left){
            int mid=(left+right)>>1;
            if(nums[mid]<target){
                left=mid+1;
            }
            else{
                right=mid;
            }
        }
        return left;
    }
}